const e=JSON.parse(`{"key":"v-381b38dd","path":"/blog/hmily_introduction.html","title":"Hmily:High-Performance Asynchronous Distributed Transaction TCC Framework","lang":"en-US","frontmatter":{"title":"Hmily:High-Performance Asynchronous Distributed Transaction TCC Framework","author":"xiaoyu","date":"2018-09-25T00:00:00.000Z","tag":["hmily","TCC"],"cover":"/assets/img/architecture/hmily-framework.png","head":[["meta",{"name":"Blog"}],["link",{"rel":"alternate","hreflang":"zh-cn","href":"https://vuepress-theme-hope-docs-demo.netlify.app/zh/blog/hmily_introduction.html"}],["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/blog/hmily_introduction.html"}],["meta",{"property":"og:title","content":"Hmily:High-Performance Asynchronous Distributed Transaction TCC Framework"}],["meta",{"property":"og:description","content":"Seamlessly integrates with Spring and Spring Boot.; \\rSeamlessly integrates with Dubbo, Spring Cloud, Motan, and other RPC frameworks.; \\rSupports various transaction log storage ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://vuepress-theme-hope-docs-demo.netlify.app/assets/img/architecture/hmily-framework.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-09-04T07:29:42.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"Hmily:High-Performance Asynchronous Distributed Transaction TCC Framework"}],["meta",{"property":"article:author","content":"xiaoyu"}],["meta",{"property":"article:tag","content":"hmily"}],["meta",{"property":"article:tag","content":"TCC"}],["meta",{"property":"article:published_time","content":"2018-09-25T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-09-04T07:29:42.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Hmily:High-Performance Asynchronous Distributed Transaction TCC Framework\\",\\"image\\":[\\"https://vuepress-theme-hope-docs-demo.netlify.app/assets/img/architecture/hmily-framework.png\\"],\\"datePublished\\":\\"2018-09-25T00:00:00.000Z\\",\\"dateModified\\":\\"2023-09-04T07:29:42.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xiaoyu\\"}]}"]],"description":"Seamlessly integrates with Spring and Spring Boot.; \\rSeamlessly integrates with Dubbo, Spring Cloud, Motan, and other RPC frameworks.; \\rSupports various transaction log storage ..."},"headers":[{"level":3,"title":"1. Asynchronous Read/Write of Transaction Logs Using Disruptor (Disruptor is a Lock-Free, GC-Free Concurrency Framework)","slug":"_1-asynchronous-read-write-of-transaction-logs-using-disruptor-disruptor-is-a-lock-free-gc-free-concurrency-framework","link":"#_1-asynchronous-read-write-of-transaction-logs-using-disruptor-disruptor-is-a-lock-free-gc-free-concurrency-framework","children":[]},{"level":3,"title":"2.Asynchronous Execution of Confirm and Cancel Methods","slug":"_2-asynchronous-execution-of-confirm-and-cancel-methods","link":"#_2-asynchronous-execution-of-confirm-and-cancel-methods","children":[]},{"level":3,"title":"A question might arise: What if the cancel or confirm methods themselves throw exceptions?","slug":"a-question-might-arise-what-if-the-cancel-or-confirm-methods-themselves-throw-exceptions","link":"#a-question-might-arise-what-if-the-cancel-or-confirm-methods-themselves-throw-exceptions","children":[]},{"level":3,"title":"Another question might arise: What if there's an exception during log storage?","slug":"another-question-might-arise-what-if-there-s-an-exception-during-log-storage","link":"#another-question-might-arise-what-if-there-s-an-exception-during-log-storage","children":[]},{"level":3,"title":"3.Use of ThreadLocal Cache","slug":"_3-use-of-threadlocal-cache","link":"#_3-use-of-threadlocal-cache","children":[]},{"level":3,"title":"4.Usage of Guava Cache","slug":"_4-usage-of-guava-cache","link":"#_4-usage-of-guava-cache","children":[]},{"level":3,"title":"These four aspects collectively make Hmily an asynchronous, high-performance distributed TCC framework.","slug":"these-four-aspects-collectively-make-hmily-an-asynchronous-high-performance-distributed-tcc-framework","link":"#these-four-aspects-collectively-make-hmily-an-asynchronous-high-performance-distributed-tcc-framework","children":[]},{"level":3,"title":"How to Use Hmily?（https://github.com/yu199195/hmily/tree/master/hmily-tcc-demo）","slug":"how-to-use-hmily-https-github-com-yu199195-hmily-tree-master-hmily-tcc-demo","link":"#how-to-use-hmily-https-github-com-yu199195-hmily-tree-master-hmily-tcc-demo","children":[]},{"level":3,"title":"1.For Dubbo Users","slug":"_1-for-dubbo-users","link":"#_1-for-dubbo-users","children":[]},{"level":3,"title":"SpringCloud Users","slug":"springcloud-users","link":"#springcloud-users","children":[]},{"level":3,"title":"Motan Users","slug":"motan-users","link":"#motan-users","children":[]},{"level":3,"title":"hmily-spring-boot-start - this makes it even easier, you just need to import different jar packages according to your RPC framework.","slug":"hmily-spring-boot-start-this-makes-it-even-easier-you-just-need-to-import-different-jar-packages-according-to-your-rpc-framework","link":"#hmily-spring-boot-start-this-makes-it-even-easier-you-just-need-to-import-different-jar-packages-according-to-your-rpc-framework","children":[]}],"git":{"createdTime":1693812582000,"updatedTime":1693812582000,"contributors":[{"name":"Cicici-Shi","email":"94002846+Cicici-Shi@users.noreply.github.com","commits":1}]},"readingTime":{"minutes":6.1,"words":1829},"filePathRelative":"blog/hmily_introduction.md","localizedDate":"September 25, 2018","autoDesc":true,"excerpt":""}`);export{e as data};
